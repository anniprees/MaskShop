@page "/testlist"

@using BlazorApp.Client.Configuration.Datagrid
@using MaskShop.Facade.Products
@using MaskShop.Domain.Products
@using Microsoft.AspNetCore.Mvc.ViewFeatures
@using Microsoft.AspNetCore.SignalR.Client

@inject NavigationManager NavigationManager
@inject HttpClient HttpClient


<h3>Testing DataGrid</h3>

<br />
<DataGridComponent TItem="ProductCategoryView"
                   DataItems="_categories"
                   Columns="_columnsDefinition"
                   Paging="@(new PagingConfig {
                               Enabled = true,
                               CustomPager = false,
                               PageSize = 3
                           })"></DataGridComponent>

@code {

    protected List<ProductCategoryView> _categories;
    protected List<ColumnDefinition> _columnsDefinition;

    protected ProductCategoryView productCategory = new ProductCategoryView
    {
        Id = "",
        Name = "",
        ValidFrom = DateTime.Now,
        ValidTo = DateTime.Now
    };


    protected override async Task OnInitializedAsync()
    {
        await LoadData();
        DefineColumnDefinitions();
    }

    private void DefineColumnDefinitions()
    {
        if (_columnsDefinition == null)
        {
            _columnsDefinition = new List<ColumnDefinition>();
            _columnsDefinition.AddRange(
                new ColumnDefinition[]{
                    new ColumnDefinition {DataField = "Id", Caption = "Id"},
                    new ColumnDefinition {DataField = "Name", Caption = "Product Category"},
                    new ColumnDefinition {DataField = "From", Caption = "Valid From"},
                    new ColumnDefinition {DataField = "To", Caption = "Valid To"},
                }
            );
        }
    }

    private void CallLoadData()
    {
        Task.Run(async () =>
        {
            await LoadData();
        });
    }

    protected async Task LoadData()
    {
        _categories = await HttpClient.GetJsonAsync<List<ProductCategoryView>>("api/productcategories");
        StateHasChanged();
    }
    
}